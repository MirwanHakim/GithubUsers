// Generated by view binder compiler. Do not edit!
package com.example.github.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.example.github.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemFavoriteBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView cardViewFavorite;

  @NonNull
  public final CircleImageView imgPhotoFavorite;

  @NonNull
  public final TextView txtRoleFavorite;

  @NonNull
  public final TextView txtUsernameFavorite;

  private ItemFavoriteBinding(@NonNull CardView rootView, @NonNull CardView cardViewFavorite,
      @NonNull CircleImageView imgPhotoFavorite, @NonNull TextView txtRoleFavorite,
      @NonNull TextView txtUsernameFavorite) {
    this.rootView = rootView;
    this.cardViewFavorite = cardViewFavorite;
    this.imgPhotoFavorite = imgPhotoFavorite;
    this.txtRoleFavorite = txtRoleFavorite;
    this.txtUsernameFavorite = txtUsernameFavorite;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemFavoriteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemFavoriteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_favorite, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemFavoriteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView cardViewFavorite = (CardView) rootView;

      id = R.id.img_photoFavorite;
      CircleImageView imgPhotoFavorite = rootView.findViewById(id);
      if (imgPhotoFavorite == null) {
        break missingId;
      }

      id = R.id.txtRoleFavorite;
      TextView txtRoleFavorite = rootView.findViewById(id);
      if (txtRoleFavorite == null) {
        break missingId;
      }

      id = R.id.txtUsernameFavorite;
      TextView txtUsernameFavorite = rootView.findViewById(id);
      if (txtUsernameFavorite == null) {
        break missingId;
      }

      return new ItemFavoriteBinding((CardView) rootView, cardViewFavorite, imgPhotoFavorite,
          txtRoleFavorite, txtUsernameFavorite);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
